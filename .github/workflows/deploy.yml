# test
name: React CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    types: [ synchronize ]
    
env:
  GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
  GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
  GIT_TOKEN: ${{secrets.GIT_TOKEN}}

  DOCKER_REGISTRY: docker.io
  DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
  DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
  DOCKER_IMAGENAME: member_client
  DOCKER_BUILD_CONTEXT: .

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        token: ${{env.GIT_TOKEN}}
        
    - name: Version Info extraction
      run : |
        version=$(echo '${{ github.event.head_commit.message }}' | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')
        echo "ë²„ì „ ì •ë³´: $version"
        echo "TAG_NAME=$version" >> $GITHUB_ENV
      id: extract_version_name
      
    #- name: Release Create
    #  uses: actions/create-release@v1
    #  if: "contains(github.event.repository.releases.*.tag_name, ${{env.TAG_NAME}}) == false"
    #  with:
    #    tag_name: ${{env.TAG_NAME}}
    #    release_name: ${{env.TAG_NAME}}
    #  env: 
    #    GITHUB_TOKEN: ${{ env.GIT_TOKEN }}

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{env.DOCKER_USERNAME}}
        password: ${{env.DOCKER_PASSWORD}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: ${{env.DOCKER_BUILD_CONTEXT}}
        push: true
        tags: |
          ${{env.DOCKER_REGISTRY}}/${{env.DOCKER_USERNAME}}/${{env.DOCKER_IMAGENAME}}:latest
          ${{env.DOCKER_REGISTRY}}/${{env.DOCKER_USERNAME}}/${{env.DOCKER_IMAGENAME}}:${{env.TAG_NAME}}

    - name: Clone CI-CD_Resource Git repository
      uses: actions/checkout@v3
      with:
        repository: SeSAC-Five-Guys/CI-CD_Resource
        path: /home/runner/work/Member_Client/Member_Client
        token: ${{ env.GIT_TOKEN }}

    - name: Update the tag in ArgoCD WebHook Git repository
      run: |
        cd /home/runner/work/Member_Client/Member_Client &&
        cd BE_Application &&
        sed -i "s|# Member_Client_.*|# Member_Client_${{ github.sha }}|" Member_Client.yaml &&
        git config --global user.email "${{env.GIT_USER_EMAIL}}" &&
        git config --global user.name "${{env.GIT_USER_NAME}}" &&  
        git commit -am "ðŸ”¨ change: image tag comment" &&
        git push